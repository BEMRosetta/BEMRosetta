// DLL function list

// Returns dll time and date
const char *DLL_Version()
// Lists all available functions
void DLL_ListFunctions() 
// Returns the list of all available functions
const char *DLL_strListFunctions() 
// Loads a FAST .out or .outb file
int DLL_FAST_Load(const char *filename) 
// Returns the parameter name of index id
const char *DLL_FAST_GetParameterName(int id) 
// Returns the parameter units of index id
const char *DLL_FAST_GetUnitName(int id) 
// Returns the number of parameters
int DLL_FAST_GetParameterCount() 
// Returns the number of registers per parameter
int DLL_FAST_GetLen() 
// Returns the initial time in seconds
double DLL_FAST_GetTimeInit() 
// Returns the end time in seconds
double DLL_FAST_GetTimeEnd() 
// Returns a vector with all data for parameter id. In num it sets the number of registers returned
double *DLL_FAST_GetDataId(int id, int *num) 
// Returns a vector with all data for parameter param. In num it sets the number of registers returned
double *DLL_FAST_GetData(const char *param, int *num) 
// Returns the average value for parameter param
double DLL_FAST_GetAvg(const char *param) 

// Open a .dat or .fst FAST file to read or save parameters
int DLL_FAST_LoadFile(const char *file) 
// Saves the .dat or .fst FAST file opened with FAST_LoadFile()
int DLL_FAST_SaveFile() 
// Sets the value of a var after paragraph. If paragraph is "", the value is set every time var appears in the file
int DLL_FAST_SetVar(const char *name, const char *paragraph, const char *value) 
// Reads the value of a var after paragraph. If paragraph is "", it is read the first time var appears in the file
const char *DLL_FAST_GetVar(const char *name, const char *paragraph)